@model IEnumerable<FlightInfo.Models.Airport>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    @if (@ViewBag.IsAdmin)
    {
        <a asp-action="Create">Create New</a>
    }
</p>
<table>
    <tbody>
    <tr>
        <table class="table">
            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.City)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Latitude)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Longtitude)
                </th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Latitude)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Longtitude)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>

                        @if (@ViewBag.IsAdmin)
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </tr>
    <tr>
        <div class="row">
            <div class="col-md-12 map">
                <div id="airportsMap" style="width: 100%; height: 610px;"></div>
            </div>
        </div>
    </tr>
    </tbody>
</table>



<script type="text/javascript">

    function loadMapScenario() {
        var map = new Microsoft.Maps.Map(document.getElementById('airportsMap'), {
            credentials: 'AqZNLL2--BtmzFDPm-C2x9Ao41eYA2KX_aV_DIGD3nkwSePUOlRThJo7syyNouPn',
            mapTypeId: Microsoft.Maps.MapTypeId.road,
            zoom: 7
        });

        // Create the infobox for the pushpin
        var infobox = null;

        //declare addMarker function
        function addMarker(latitude, longitude, title, description, pid)
        {
            var marker = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(latitude, longitude), { color: 'green' });

            infobox = new Microsoft.Maps.Infobox(marker.getLocation(), {
                visible : false
            });

            marker.metadata = {
                id: pid,
                title: title,
                description: description
            };

            Microsoft.Maps.Events.addHandler(marker, 'mouseout', hideInfobox);
            Microsoft.Maps.Events.addHandler(marker, 'mouseover', showInfobox);

            infobox.setMap(map);
            map.entities.push(marker);
            marker.setOptions({ enableHoverStyle: true });
        };

        function showInfobox(e) {
            if (e.target.metadata) {
                infobox.setOptions({
                    location: e.target.getLocation(),
                    title: e.target.metadata.title,
                    description: e.target.metadata.description,
                    visible: true
                });
            }
        }

        function hideInfobox(e) {
            infobox.setOptions({ visible: false });
        }

        //add markers to map
        @if (Model != null)
        {
            foreach (var item in Model)
            {
                @:addMarker(@item.Latitude, @item.Longtitude, '@item.Name', '@item.City.Name', @item.Id);
            }
        }
    }
</script>
<script type='text/javascript' src='http://www.bing.com/api/maps/mapcontrol?branch=release&callback=loadMapScenario' async defer></script>  